name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  component-unit-test:
    name: "Component and Unit Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18, 20]

    steps:
      - uses: actions/checkout@v4
      - name: Setup node | ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run test | tee test-results-${{ matrix.node }}.log

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results-${{ matrix.node }}
          path: test-results-${{ matrix.node }}.log

  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: bitnami/postgresql:alpine
        ports:
          - 5432:5432
        env:
          POSTGRESQL_USERNAME: docker
          POSTGRESQL_PASSWORD: docker
          POSTGRESQL_DATABASE: apisolid

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - run: npm ci

      - run: npm run test:e2e | tee e2e-test-results.log
        env:
          JWT_SECRET: testing
          DATABASE_URL: "postgresql://docker:docker@localhost:5432/apisolid?schema=public"

      - name: Upload E2E Test Results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: e2e-test-results.log

  sast:
    name: "SAST Analysis"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        continue-on-error: true # Garante que erros nÃ£o quebrem o pipeline

      - name: Export SAST Report
        run: cat results.sarif > sast-report.sarif || echo "No report generated"

      - name: Upload SAST Report
        uses: actions/upload-artifact@v4
        with:
          name: sast-report
          path: sast-report.sarif

  build:
    name: "Build and Push"
    runs-on: ubuntu-latest
    needs: [component-unit-test, e2e-tests]

    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: henriquelimadev/gc-sistematizacao:${{ steps.generate_tag.outputs.sha }},henriquelimadev/gc-sistematizacao:latest
